import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';


import SimpleForm from '@/components/SimpleForm';

describe('SimpleForm Component', () => {
  beforeEach(() => {
    render(<SimpleForm />);
  });

  it('renders input and button', () => {
    expect(screen.getByPlaceholderText(/type something/i)).toBeInTheDocument();
    expect(screen.getByRole('button', { name: /submit/i })).toBeInTheDocument();
  });

  it('submits form and shows result', () => {
    // ЁЯСЙ ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржб ржПржмржВ рж╕рж╛ржмржорж┐ржЯ ржмрж╛ржЯржи DOM ржерзЗржХрзЗ ржмрзЗрж░ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред
    const input = screen.getByLabelText('user-input') as HTMLInputElement;
    const submitButton = screen.getByRole('button', { name: /submit/i });

   //ЁЯСЙ ржЗржиржкрзБржЯрзЗ Lipon Roy ржЯрж╛ржЗржк ржХрж░рж╛ ржПржмржВ ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж╛рж░ ржорждрзЛ ржЖржЪрж░ржг рж╕рж┐ржорзБрж▓рзЗржЯ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред

    fireEvent.change(input, { target: { value: 'Lipon Roy' } });
    fireEvent.click(submitButton);
    // ЁЯСЙ data-testid="result" ржПрж▓рж┐ржорзЗржирзНржЯрзЗ Lipon Roy рж▓рзЗржЦрж╛ ржЖржЫрзЗ ржХрж┐ ржирж╛, рждрж╛ ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред
    expect(screen.getByTestId('result')).toHaveTextContent('Lipon Roy');

  });
});

// All comment is here ...
// render, screen, fireEvent
// ЁЯСЙ ржПржЧрзБрж▓рзЛ @testing-library/react ржерзЗржХрзЗ ржПрж╕рзЗржЫрзЗред ржПржЧрзБрж▓рзЛрж░ ржХрж╛ржЬ:

// render: ржХржорзНржкрзЛржирзЗржирзНржЯржХрзЗ ржнрж╛рж░рзНржЪрзБрзЯрж╛рж▓ DOM-ржП рж░рзЗржирзНржбрж╛рж░ ржХрж░рзЗред

// screen: ржбржХрзБржорзЗржирзНржЯрзЗрж░ ржоржзрзНржпрзЗ DOM ржПрж▓рж┐ржорзЗржирзНржЯ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред

// fireEvent: ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржирзНржЯрж╛рж░ржЕрзНржпрж╛ржХрж╢ржи (ржпрзЗржоржи: change, click) рж╕рж┐ржорзБрж▓рзЗржЯ ржХрж░рзЗред

// SimpleForm: ржЖржорж╛ржжрзЗрж░ ржЯрзЗрж╕рзНржЯ ржХрж░рж╛рж░ ржХржорзНржкрзЛржирзЗржирзНржЯред


// ЁЯФ╕ describe()
// ЁЯСЙ ржПржЯрж╛ ржПржХржЯрж┐ ржЯрзЗрж╕рзНржЯ рж╕рзНржпрзБржЯред ржПрж░ ржоржзрзНржпрзЗ ржерж╛ржХрж╛ рж╕ржм ржЯрзЗрж╕рзНржЯ SimpleForm Component рж╕ржорзНржкрж░рзНржХрж┐рждред

// ЁЯФ╕ beforeEach()
// ЁЯСЙ ржкрзНрж░рждрж┐ржЯрж┐ ржЯрзЗрж╕рзНржЯрзЗрж░ ржЖржЧрзЗ SimpleForm ржХржорзНржкрзЛржирзЗржирзНржЯржЯрж┐ ржПржХржмрж╛рж░ рж░рзЗржирзНржбрж╛рж░ ржХрж░рзЗ ржжрзЗржмрзЗред

// ЁЯФ╕ it()
// ЁЯСЙ ржПржЯрж┐ ржПржХржЯрж┐ ржЯрзЗрж╕рзНржЯ ржХрзЗрж╕ред

// ЁЯФ╕ expect().toBeInTheDocument()
// ЁЯСЙ ржЪрзЗржХ ржХрж░рзЗ DOM-ржП ржЗржиржкрзБржЯ ржПржмржВ ржмрж╛ржЯржи ржЖржЫрзЗ ржХрж┐ржирж╛ред

// ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд:
// getByPlaceholderText(/type something/i)
// ЁЯСЙ placeholder="Type something..." ржЗржиржкрзБржЯ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рзЗред

// getByRole('button', { name: /submit/i })
// ЁЯСЙ Submit ржирж╛ржорзЗрж░ ржмрж╛ржЯржи ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рзЗред

// render()	ржХржорзНржкрзЛржирзЗржирзНржЯржХрзЗ ржнрж╛рж░рзНржЪрзБрзЯрж╛рж▓ DOM-ржП рж░рзЗржирзНржбрж╛рж░ ржХрж░рзЗ
// screen.getBy...()	DOM ржерзЗржХрзЗ ржЗржиржкрзБржЯ, ржмрж╛ржЯржи, ржмрж╛ рж░рзЗржЬрж╛рж▓рзНржЯ ржПрж▓рж┐ржорзЗржирзНржЯ ржЦрзЛржБржЬрзЗ
// fireEvent.change()	ржЗржЙржЬрж╛рж░рзЗрж░ ржЗржиржкрзБржЯ ржЯрж╛ржЗржк ржХрж░рж╛рж░ ржЖржЪрж░ржг рж╕рж┐ржорзБрж▓рзЗржЯ ржХрж░рзЗ
// fireEvent.click()	ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж╛рж░ рж╕рж┐ржорзБрж▓рзЗрж╢ржи ржХрж░рзЗ
// expect(...).toBeInTheDocument()	DOM-ржП ржЙржкрж╛ржжрж╛ржи ржЖржЫрзЗ ржХрж┐ ржирж╛ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рзЗ
// expect(...).toHaveTextContent()	DOM-ржПрж░ ржоржзрзНржпрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржЯрзЗржХрзНрж╕ржЯ ржЖржЫрзЗ ржХрж┐ ржирж╛ ржЪрзЗржХ ржХрж░рзЗ

